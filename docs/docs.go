// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "https://github.com/lleonesouza",
            "email": "lleonesouza@live.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/bus-travels": {
            "get": {
                "description": "Get all bus travels",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bus-travel"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dtos.BusTravel"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.BadRequestError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.InternalServerError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a bus-travel.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bus-travel"
                ],
                "parameters": [
                    {
                        "description": "Create BusTravel Input",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.BusTravelCreateInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dtos.BusTravel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.BadRequestError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.InternalServerError"
                        }
                    }
                }
            }
        },
        "/bus-travels/{id}": {
            "get": {
                "description": "Find bus-travel.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bus-travel"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "BusTravel ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.BusTravel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.BadRequestError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.NotFoundError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.InternalServerError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update BusTravel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bus-travel"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "BusTravel ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "BusTravel",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.BusTravelUpdateInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.BusTravel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.BadRequestError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.NotFoundError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.InternalServerError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete BusTravel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bus-travel"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "BusTravel ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.BadRequestError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.NotFoundError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.InternalServerError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dtos.BusTravel": {
            "type": "object",
            "required": [
                "arrivalTime",
                "departureTime",
                "origin",
                "price"
            ],
            "properties": {
                "arrivalTime": {
                    "type": "string",
                    "example": "2022-01-01T15:00:00Z"
                },
                "departureTime": {
                    "type": "string",
                    "example": "2022-01-01T10:00:00Z"
                },
                "destination": {
                    "type": "string",
                    "example": "Rio de Janeiro"
                },
                "hasAirConditioner": {
                    "type": "boolean",
                    "example": true
                },
                "hasBathroom": {
                    "type": "boolean",
                    "example": true
                },
                "hasWiFi": {
                    "type": "boolean",
                    "example": true
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "origin": {
                    "type": "string",
                    "example": "São Paulo"
                },
                "price": {
                    "type": "number",
                    "minimum": 0,
                    "example": 50
                }
            }
        },
        "dtos.BusTravelCreateInput": {
            "type": "object",
            "required": [
                "arrivalTime",
                "departureTime",
                "origin",
                "price"
            ],
            "properties": {
                "arrivalTime": {
                    "type": "string",
                    "example": "2022-01-01T15:00:00Z"
                },
                "departureTime": {
                    "type": "string",
                    "example": "2022-01-01T10:00:00Z"
                },
                "destination": {
                    "type": "string",
                    "example": "Rio de Janeiro"
                },
                "hasAirConditioner": {
                    "type": "boolean",
                    "example": true
                },
                "hasBathroom": {
                    "type": "boolean",
                    "example": true
                },
                "hasWiFi": {
                    "type": "boolean",
                    "example": true
                },
                "origin": {
                    "type": "string",
                    "example": "São Paulo"
                },
                "price": {
                    "type": "number",
                    "minimum": 0,
                    "example": 50
                }
            }
        },
        "dtos.BusTravelUpdateInput": {
            "type": "object",
            "properties": {
                "arrivalTime": {
                    "type": "string",
                    "example": "2022-01-01T15:00:00Z"
                },
                "departureTime": {
                    "type": "string",
                    "example": "2022-01-01T10:00:00Z"
                },
                "destination": {
                    "type": "string"
                },
                "hasAirConditioner": {
                    "type": "boolean",
                    "example": true
                },
                "hasBathroom": {
                    "type": "boolean",
                    "example": true
                },
                "hasWiFi": {
                    "type": "boolean",
                    "example": true
                },
                "origin": {
                    "type": "string"
                },
                "price": {
                    "type": "number",
                    "example": 50
                }
            }
        },
        "errors.BadRequestError": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "string",
                    "example": "Key: 'BusTravelCreateInput.Origin' Error:Field validation for 'Origin' failed on the 'required' tag"
                },
                "status": {
                    "type": "integer",
                    "example": 400
                },
                "title": {
                    "type": "string",
                    "example": "BadRequestError"
                }
            }
        },
        "errors.InternalServerError": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "string",
                    "example": "Something goes wrong. Please try again"
                },
                "status": {
                    "type": "integer",
                    "example": 500
                },
                "title": {
                    "type": "string",
                    "example": "InternalServerError"
                }
            }
        },
        "errors.NotFoundError": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "string",
                    "example": "The email 'john@doe.com' is not found in the system."
                },
                "status": {
                    "type": "integer",
                    "example": 404
                },
                "title": {
                    "type": "string",
                    "example": "NotFoundError"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:1324",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "bus-travel",
	Description:      "This is a simple Product (bus-travel) CRUD server",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
